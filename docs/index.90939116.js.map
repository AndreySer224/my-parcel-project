{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["// Массив с ID видео, которые будут воспроизводиться случайным образом\nconst videoIds = [\n    \"QykPk380FkU\",\n    \"v5SOSwZg7b4\",\n    \"XQ4Cx_ciS9M&t=2555s\"\n];\n// Получаем элементы кнопок и контейнер для видео\nconst randomVideoButton = document.getElementById(\"randomVideoButton\");\nconst closeVideoButton = document.getElementById(\"closeVideoButton\");\nconst videoContainer = document.getElementById(\"videoContainer\");\n// Функция для воспроизведения случайного видео\nfunction playRandomVideo() {\n    // Выбираем случайный ID видео из массива\n    const randomVideoId = videoIds[Math.floor(Math.random() * videoIds.length)];\n    // Проверяем, есть ли уже iframe с видео, и удаляем его, если есть\n    const oldIframe = document.getElementById(\"youtubeVideo\");\n    if (oldIframe) oldIframe.remove();\n    // Создаем новый iframe для YouTube видео\n    const iframe = document.createElement(\"iframe\");\n    iframe.id = \"youtubeVideo\";\n    iframe.width = \"560\";\n    iframe.height = \"315\";\n    iframe.src = `https://www.youtube.com/embed/${randomVideoId}?autoplay=1`;\n    iframe.frameBorder = \"0\";\n    iframe.allow = \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\";\n    iframe.allowFullscreen = true;\n    // Добавляем iframe на страницу\n    videoContainer.appendChild(iframe);\n    // Скрываем кнопку \"Смотреть случайное видео\" и показываем кнопку \"Закрыть видео\"\n    randomVideoButton.style.display = \"none\";\n    closeVideoButton.style.display = \"inline\";\n}\n// Функция для закрытия видео\nfunction closeVideo() {\n    // Удаляем iframe с видео, если он существует\n    const oldIframe = document.getElementById(\"youtubeVideo\");\n    if (oldIframe) oldIframe.remove();\n    // Показываем кнопку \"Смотреть случайное видео\" и скрываем кнопку \"Закрыть видео\"\n    randomVideoButton.style.display = \"inline\";\n    closeVideoButton.style.display = \"none\";\n}\n// Назначаем функции на кнопки\nrandomVideoButton.addEventListener(\"click\", playRandomVideo);\ncloseVideoButton.addEventListener(\"click\", closeVideo);\ndocument.querySelectorAll(\".apply-btn\").forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        document.getElementById(\"formContainer\").style.display = \"flex\";\n    });\n});\ndocument.getElementById(\"closeBtn\").addEventListener(\"click\", ()=>{\n    document.getElementById(\"formContainer\").style.display = \"none\";\n});\ndocument.getElementById(\"applyForm\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    let isValid = true;\n    const nameField = document.getElementById(\"name\");\n    const phoneField = document.getElementById(\"phone\");\n    const agreeCheckbox = document.getElementById(\"agree\");\n    const nameError = document.getElementById(\"nameError\");\n    const phoneError = document.getElementById(\"phoneError\");\n    const agreeError = document.getElementById(\"agreeError\");\n    // Сброс ошибок перед проверкой\n    nameError.style.display = \"none\";\n    phoneError.style.display = \"none\";\n    agreeError.style.display = \"none\";\n    nameField.classList.remove(\"invalid\");\n    phoneField.classList.remove(\"invalid\");\n    // Проверка имени\n    if (!nameField.value.trim()) {\n        nameField.classList.add(\"invalid\");\n        nameError.style.display = \"block\";\n        isValid = false;\n    }\n    // Проверка номера телефона\n    if (!phoneField.value.trim()) {\n        phoneField.classList.add(\"invalid\");\n        phoneError.style.display = \"block\";\n        phoneError.textContent = \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\";\n        isValid = false;\n    } else {\n        // Регулярное выражение для международного формата номера телефона\n        const phoneRegex = /^\\+?[1-9]\\d{1,14}$/;\n        if (!phoneRegex.test(phoneField.value.trim())) {\n            phoneField.classList.add(\"invalid\");\n            phoneError.style.display = \"block\";\n            phoneError.textContent = \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435, \\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 +71234567890\";\n            isValid = false;\n        } else {\n            // Если номер валиден, скрываем ошибку и удаляем класс 'invalid'\n            phoneField.classList.remove(\"invalid\");\n            phoneError.style.display = \"none\";\n        }\n    }\n    // Проверка согласия на обработку персональных данных\n    if (!agreeCheckbox.checked) {\n        agreeError.style.display = \"block\";\n        isValid = false;\n    }\n    // Если форма валидна\n    if (isValid) {\n        // Отправка данных на сервер (симуляция)\n        console.log(\"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\");\n        // Скрываем форму\n        document.getElementById(\"formContainer\").style.display = \"none\";\n        // Сброс формы после отправки\n        this.reset();\n        // Показ всплывающего окна\n        const successPopup = document.getElementById(\"successPopup\");\n        successPopup.style.display = \"block\";\n        // Закрыть всплывающее окно через 3 секунды\n        setTimeout(()=>{\n            successPopup.style.display = \"none\";\n        }, 3000);\n    }\n});\n// Получаем все элементы с классом \"icon heart\"\nconst icons = document.querySelectorAll(\".icon.heard\");\n// Назначаем обработчик клика для каждого элемента\nicons.forEach((icon)=>{\n    icon.addEventListener(\"click\", ()=>{\n        icon.classList.toggle(\"active\");\n    });\n});\n\n//# sourceMappingURL=index.90939116.js.map\n","// Массив с ID видео, которые будут воспроизводиться случайным образом\r\nconst videoIds = [\r\n    'QykPk380FkU', // Пример видео 1\r\n    'v5SOSwZg7b4', // Пример видео 2\r\n    'XQ4Cx_ciS9M&t=2555s', // Пример видео 3    \r\n];\r\n\r\n// Получаем элементы кнопок и контейнер для видео\r\nconst randomVideoButton = document.getElementById('randomVideoButton');\r\nconst closeVideoButton = document.getElementById('closeVideoButton');\r\nconst videoContainer = document.getElementById('videoContainer');\r\n\r\n// Функция для воспроизведения случайного видео\r\nfunction playRandomVideo() {\r\n    // Выбираем случайный ID видео из массива\r\n    const randomVideoId = videoIds[Math.floor(Math.random() * videoIds.length)];\r\n\r\n    // Проверяем, есть ли уже iframe с видео, и удаляем его, если есть\r\n    const oldIframe = document.getElementById('youtubeVideo');\r\n    if (oldIframe) {\r\n        oldIframe.remove();\r\n    }\r\n    // Создаем новый iframe для YouTube видео\r\n    const iframe = document.createElement('iframe');\r\n    iframe.id = 'youtubeVideo';\r\n    iframe.width = '560';\r\n    iframe.height = '315';\r\n    iframe.src = `https://www.youtube.com/embed/${randomVideoId}?autoplay=1`;\r\n    iframe.frameBorder = '0';\r\n    iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';\r\n    iframe.allowFullscreen = true;\r\n    // Добавляем iframe на страницу\r\n    videoContainer.appendChild(iframe);\r\n    // Скрываем кнопку \"Смотреть случайное видео\" и показываем кнопку \"Закрыть видео\"\r\n    randomVideoButton.style.display = 'none';\r\n    closeVideoButton.style.display = 'inline';\r\n}\r\n// Функция для закрытия видео\r\nfunction closeVideo() {\r\n    // Удаляем iframe с видео, если он существует\r\n    const oldIframe = document.getElementById('youtubeVideo');\r\n    if (oldIframe) {\r\n        oldIframe.remove();\r\n    }\r\n    // Показываем кнопку \"Смотреть случайное видео\" и скрываем кнопку \"Закрыть видео\"\r\n    randomVideoButton.style.display = 'inline';\r\n    closeVideoButton.style.display = 'none';\r\n}\r\n// Назначаем функции на кнопки\r\nrandomVideoButton.addEventListener('click', playRandomVideo);\r\ncloseVideoButton.addEventListener('click', closeVideo);\r\n\r\n\r\n\r\n\r\ndocument.querySelectorAll('.apply-btn').forEach(button => {\r\n    button.addEventListener('click', () => {\r\n        document.getElementById('formContainer').style.display = 'flex';\r\n    });\r\n  });\r\n  \r\n  document.getElementById('closeBtn').addEventListener('click', () => {\r\n    document.getElementById('formContainer').style.display = 'none';\r\n  });\r\n  \r\n  document.getElementById('applyForm').addEventListener('submit', function(event) {\r\n    event.preventDefault();\r\n  \r\n    let isValid = true;\r\n  \r\n    const nameField = document.getElementById('name');\r\n    const phoneField = document.getElementById('phone');\r\n    const agreeCheckbox = document.getElementById('agree');\r\n    const nameError = document.getElementById('nameError');\r\n    const phoneError = document.getElementById('phoneError');\r\n    const agreeError = document.getElementById('agreeError');\r\n  \r\n    // Сброс ошибок перед проверкой\r\n    nameError.style.display = 'none';\r\n    phoneError.style.display = 'none';\r\n    agreeError.style.display = 'none';\r\n    nameField.classList.remove('invalid');\r\n    phoneField.classList.remove('invalid');\r\n  \r\n    // Проверка имени\r\n    if (!nameField.value.trim()) {\r\n        nameField.classList.add('invalid');\r\n        nameError.style.display = 'block';\r\n        isValid = false;\r\n    }\r\n  \r\n    // Проверка номера телефона\r\n    if (!phoneField.value.trim()) {\r\n        phoneField.classList.add('invalid');\r\n        phoneError.style.display = 'block';\r\n        phoneError.textContent = 'Введите номер телефона';\r\n        isValid = false;\r\n    } else {\r\n        // Регулярное выражение для международного формата номера телефона\r\n        const phoneRegex = /^\\+?[1-9]\\d{1,14}$/;\r\n        if (!phoneRegex.test(phoneField.value.trim())) {\r\n            phoneField.classList.add('invalid');\r\n            phoneError.style.display = 'block';\r\n            phoneError.textContent = 'Введите номер в формате, например +71234567890';\r\n            isValid = false;\r\n        } else {\r\n            // Если номер валиден, скрываем ошибку и удаляем класс 'invalid'\r\n            phoneField.classList.remove('invalid');\r\n            phoneError.style.display = 'none';\r\n        }\r\n    }\r\n  \r\n    // Проверка согласия на обработку персональных данных\r\n    if (!agreeCheckbox.checked) {\r\n        agreeError.style.display = 'block';\r\n        isValid = false;\r\n    }\r\n  \r\n    // Если форма валидна\r\n    if (isValid) {\r\n        // Отправка данных на сервер (симуляция)\r\n        console.log(\"Форма отправлена\");\r\n  \r\n        // Скрываем форму\r\n        document.getElementById('formContainer').style.display = 'none';\r\n  \r\n        // Сброс формы после отправки\r\n        this.reset();\r\n  \r\n        // Показ всплывающего окна\r\n        const successPopup = document.getElementById('successPopup');\r\n        successPopup.style.display = 'block';\r\n  \r\n        // Закрыть всплывающее окно через 3 секунды\r\n        setTimeout(() => {\r\n            successPopup.style.display = 'none';\r\n        }, 3000);\r\n    }\r\n  });\r\n\r\n\r\n\r\n   // Получаем все элементы с классом \"icon heart\"\r\n   const icons = document.querySelectorAll('.icon.heard');\r\n\r\n   // Назначаем обработчик клика для каждого элемента\r\n   icons.forEach(icon => {\r\n     icon.addEventListener('click', () => {\r\n       icon.classList.toggle('active');\r\n     });\r\n   });\r\n  \r\n\r\n\r\n"],"names":["videoIds","randomVideoButton","document","getElementById","closeVideoButton","videoContainer","addEventListener","randomVideoId","Math","floor","random","length","oldIframe","remove","iframe","createElement","id","width","height","src","frameBorder","allow","allowFullscreen","appendChild","style","display","querySelectorAll","forEach","button","event","preventDefault","isValid","nameField","phoneField","agreeCheckbox","nameError","phoneError","agreeError","classList","value","trim","add","phoneRegex","test","textContent","checked","console","log","reset","successPopup","setTimeout","icons","icon","toggle"],"version":3,"file":"index.90939116.js.map"}